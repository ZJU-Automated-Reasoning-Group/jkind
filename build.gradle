import java.text.SimpleDateFormat;

def jkind_version_base = '4.4.3-SNAPSHOT'

def buildTime() {
    def df = new SimpleDateFormat("yyyyMMddHHmm");
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

def match = jkind_version_base =~ /([0-9]+\.[0-9]\.[0-9]+).*/
def jkind_version = match[0][1]
if (jkind_version_base.matches("([0-9]+\\.[0-9]+\\.[0-9]+)-SNAPSHOT")) {
    jkind_version = jkind_version + "-" + buildTime()
}
assert jkind_version ==~ /[0-9.\-]+/

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.amazonaws:aws-java-sdk-core:1.11.5'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = 'com.collins.trustedsystems.jkind'

    repositories {
       flatDir {
           dirs '../jkind-common/dependencies'
       }
    }

    dependencies {
        compile name: 'antlr-runtime-4.4'
        compile name: 'jxl'
    }

    sourceSets {
        main {
            java {
                srcDirs = ['../jkind-common/src']
            }
        }
    }
}

project(':jkind') {
    repositories {
       flatDir {
           dirs 'dependencies'
       }
    }

    dependencies {
        compile name: 'commons-cli-1.2'
        compile name: 'smtinterpol'
    }

    sourceSets {
        main {
            java {
                srcDirs += ['src']
            }
            resources {
                srcDirs += ['resources']
            }
        }
    }

    jar {
        manifest {
            attributes 'Main-Class': 'jkind.Main',
                'Bundle-Description': 'An infinite-state model checker for safety properties in Lustre',
                'Bundle-License': 'https://github.com/loonwerks/jkind/blob/master/LICENSE',
                'Bundle-SymbolicName': 'com.collins.trustedsystems.jkind',
                'Bundle-Version': jkind_version,
                'Implementation-Version': jkind_version
        }
        from sourceSets.main.allSource
    
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }

    ext {
        // awsCredentials = new com.amazonaws.auth.profile.ProfileCredentialsProvider().credentials
        awsAccessKeyId = System.env.AWS_ACCESS_KEY_ID ?: findProperty("aws_access_key_id")
        awsSecretAccessKey = System.env.AWS_SECRET_ACCESS_KEY ?: findProperty("aws_secret_access_key")
    }

    publishing {
        repositories {
            // maven {
            //     url 'https://rc-517734263030.d.codeartifact.us-east-2.amazonaws.com/maven/ca-trustedsystems-codeartifact-public-us-east-2/'
            //     credentials {
            //         username "aws"
            //         password System.env.CODEARTIFACT_AUTH_TOKEN
            //     }
            // }
            maven {
                url "s3://ca-trustedsystems-dev-us-east-1/mvn/releases/"
                // credentials(AwsCredentials) {
                // accessKey awsCredentials.AWSAccessKeyId
                // secretKey awsCredentials.AWSSecretKey
                // }
                credentials {
                    accessKey = awsAccessKeyId
                    secretKey = awsSecretAccessKey
                }
            }
        }
        publications {
            mavenJava(MavenPublication) {
                artifactId 'com.collins.trustedsystems.jkind'
                version jkind_version
                from components.java
            }
        }
    }
	//String fooString = "awsCredentials.AWSAccessKeyId = ${awsCredentials.AWSAccessKeyId}, awsCredentials.AWSSecretKey = ${awsCredentials.AWSSecretKey}"
	//project.logger.lifecycle(fooString)
	//String barString = "credentials.accessKey = ${credentials.accessKey}"
	//project.logger.lifecycle(barString)
}

project(':jkind-api') {
    sourceSets {
        main {
            java {
                srcDirs += ['src']
            }
            resources {
                srcDirs = ['resources']
            }
        }
    }

    jar {
        manifest {
            attributes 'Main-Class': 'jkind.Main',
                'Bundle-Description': 'An infinite-state model checker for safety properties in Lustre',
                'Bundle-License': 'https://github.com/loonwerks/jkind/blob/master/LICENSE',
                'Bundle-SymbolicName': 'com.collins.trustedsystems.jkind-api',
                'Bundle-Version': jkind_version,
                'Implementation-Version': jkind_version
        }
        from sourceSets.main.allSource
    }
}

task dist(type: Zip) {
    dependsOn 'jkind-api:jar', 'jkind:jar'
    from ('scripts') {
        include '*'
        exclude '*.bat'
        fileMode 0755
        into 'jkind'
    }
    from ('scripts') {
        include '*.bat'
        into 'jkind'
    }
    from ('jkind/build/libs') {
         include 'jkind.jar'
         into 'jkind'
    }
    from ('jkind-api/build/libs') {
         include 'jkind-api.jar'
         into 'jkind'
    }
    baseName = 'jkind'
    version = jkind_version
}
 
artifacts {
    archives dist
}
